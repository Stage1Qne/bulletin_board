= form_for [:admin_panel, @user], html: { multipart: true }, remote: true, data: { model_name: @user.class.name.downcase, type: :json } do |f|
  - if @user.errors.any?
    = flash_message('error', 'An error occurred while attempting to save the recorded steps:', @user.errors.full_messages)
  .ui.grid.center.aligned
    .eleven.wide.column
      .ui.buttons
        = link_to(link_to_back_path(admin_panel_users_path), class: 'ui teal labeled icon button js-loading-btn') do
          %i.reply.icon
          Back
        - if @user.persisted?
          = link_to admin_panel_user_path(@user), class: 'ui teal icon button js-loading-btn' do
            Show
          = link_to admin_panel_user_path(@user, redirect_path: link_to_back_path(admin_panel_users_path)), class: 'ui teal right labeled icon button js-loading-btn', method: :delete, data: { confirm: 'The record will be removed' } do
            Delete
            %i.remove.icon
      .ui.form.large.segment
        %h4.ui.dividing.header User information
        .three.fields
          .field{ class: "#{required_field_class(params[:action])}" }
            = f.label :first_name, 'First name'
            .ui.icon.input
              = f.text_field :first_name, placeholder: 'First name', type: 'text'
          .field{ class: "#{required_field_class(params[:action])}" }
            = f.label :last_name, 'Last name'
            .ui.icon.input
              = f.text_field :last_name, placeholder: 'Last name', type: 'text'
          .field{ class: "#{required_field_class(params[:action])}" }
            = f.label :birthday, 'Birthday'
            .ui.icon.input
              = f.text_field :birthday, value: (f.object.birthday.strftime('%d.%m.%Y') if f.object.birthday), placeholder: 'dd.mm.yyyy', type: 'text'
        .field{ class: "#{required_field_class(params[:action])}" }
          = f.label :email, 'Email'
          .ui.icon.input
            = f.email_field :email, placeholder: 'Email', type: 'email'
        .two.fields
          .field{class: "#{required_field_class(params[:action])}"}
            = f.label :password, 'Password'
            .ui.icon.input
              = f.password_field :password, autocomplete: 'off', type: 'password'
              %i.lock.red.icon
          .field{class: "#{required_field_class(params[:action])}"}
            = f.label :password_confirmation, 'Password confirmation'
            .ui.icon.input
              = f.password_field :password_confirmation, autocomplete: 'off', type: 'password'
              %i.shield.red.icon
        %h4.ui.dividing.header Location information
        .two.fields
          .field{ class: "#{required_field_class(params[:action])}" }
            = f.label :country, 'Country'
            .ui.icon.input
              = f.text_field :country, placeholder: 'Country', type: 'text'
          .field{ class: "#{required_field_class(params[:action])}" }
            = f.label :state, 'State'
            .ui.icon.input
              = f.text_field :state, placeholder: 'State', type: 'text'
        .two.fields
          .field{ class: "#{required_field_class(params[:action])}" }
            = f.label :city, 'City'
            .ui.icon.input
              = f.text_field :city, placeholder: 'City', type: 'text'
          .field{ class: "#{required_field_class(params[:action])}" }
            = f.label :zip, 'Zip'
            .ui.icon.input
              = f.text_field :zip, placeholder: 'Zip code', type: 'text'
        .field{ class: "#{required_field_class(params[:action])}" }
          = f.label :address, 'Address'
          .ui.icon.input
            = f.text_field :address, placeholder: 'Address', type: 'text'
        %h4.ui.dividing.header User role
        .inline.fields
          - User.roles.keys.each do |role|
            .field
              .ui.radio.checkbox
                = f.radio_button :role, role, checked: @user.role == role
                %label= role.humanize
        = f.submit 'Submit', class: 'ui teal submit button js-form-send-btn'
